{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React Bar Code Reader\\\\BarcodeShopperProject\\\\App.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    {\\n      rates(currency: \\\"USD\\\") {\\n        currency\\n        rate\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from \"@apollo/client\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nvar client = new ApolloClient({\n  uri: \"https://7b1e138671fbae7fda319f305a96abd0:a7abb2368b62941c85c998491395222e@Fuse+Link.myshopify.com/admin/api/2020-01/inventory_items/\" + inventoryItem + \".json\",\n  cache: new InMemoryCache()\n});\n\nfunction ExchangeRates() {\n  var _useQuery = useQuery(gql(_templateObject())),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  console.log(data);\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return data.rates.map(function (_ref) {\n    var currency = _ref.currency,\n        rate = _ref.rate;\n    return React.createElement(Text, {\n      key: currency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, \" \", currency, \": \", rate);\n  });\n}\n\nfunction App() {\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"My first Apollo app \\uD83D\\uDE80\")), React.createElement(ExchangeRates, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/User/Desktop/React Bar Code Reader/BarcodeShopperProject/App.js"],"names":["React","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","client","uri","inventoryItem","cache","ExchangeRates","loading","error","data","console","log","rates","map","currency","rate","App"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,GALF,QAMO,gBANP;;;;;;AAcA,IAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAG9BM,EAAAA,GAAG,2IAAyIC,aAAzI,UAH2B;AAI9BC,EAAAA,KAAK,EAAE,IAAIP,aAAJ;AAJuB,CAAjB,CAAf;;AAQA,SAASQ,aAAT,GAAyB;AAAA,kBACUN,QAAQ,CAACC,GAAD,oBADlB;AAAA,MACfM,OADe,aACfA,OADe;AAAA,MACNC,KADM,aACNA,KADM;AAAA,MACCC,IADD,aACCA,IADD;;AASvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SAAOC,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAe;AAAA,QAAGC,QAAH,QAAGA,QAAH;AAAA,QAAaC,IAAb,QAAaA,IAAb;AAAA,WACpB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAED,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuBA,QAAvB,QAAmCC,IAAnC,CADoB;AAAA,GAAf,CAAP;AAID;;AAED,SAASC,GAAT,GAAe;AACb,SACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEd,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,CADF,EAIE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AASD;;AACD,eAAec,GAAf","sourcesContent":["import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql\n} from \"@apollo/client\";\nimport {\n  Text,\n  Image,\n  View,\n  StyleSheet, ScrollView\n} from 'react-native';\n\nconst client = new ApolloClient({\n  //instead of a simple concatenation this uses string interpolation.\n  //the uri gets a single inventory item from your store based on the variable inventoryItem\n  uri: `https://7b1e138671fbae7fda319f305a96abd0:a7abb2368b62941c85c998491395222e@Fuse+Link.myshopify.com/admin/api/2020-01/inventory_items/${inventoryItem}.json`,\n  cache: new InMemoryCache()\n});\n\n\nfunction ExchangeRates() {\n  const { loading, error, data } = useQuery(gql`\n    {\n      rates(currency: \"USD\") {\n        currency\n        rate\n      }\n    }\n  `);\n  console.log(data)\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return data.rates.map(({ currency, rate }) => (\n    <Text key={currency}> {currency}: {rate}\n    </Text>\n  ));\n}\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <ScrollView>\n        <Text>My first Apollo app ðŸš€</Text>\n      </ScrollView>\n      <ExchangeRates />\n\n    </ApolloProvider>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}