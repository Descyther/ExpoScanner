{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React Bar Code Reader\\\\BarcodeShopperProject\\\\App.js\";\nimport React from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nvar client = new ApolloClient({\n  cache: new InMemoryCache()\n});\n\nvar App = function App() {\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"hi\")));\n};\n\nAppRegistry.registerComponent('MyApplication', function () {\n  return App;\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/User/Desktop/React Bar Code Reader/BarcodeShopperProject/App.js"],"names":["React","ApolloClient","InMemoryCache","ApolloProvider","client","cache","App","AppRegistry","registerComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,cAAtC,QAA4D,gBAA5D;;;;AAIA,IAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAC9BI,EAAAA,KAAK,EAAE,IAAIH,aAAJ;AADuB,CAAjB,CAAf;;AAIA,IAAMI,GAAG,GAAG,SAANA,GAAM;AAAA,SACV,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEF,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACU,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CADV,CADU;AAAA,CAAZ;;AAQAG,WAAW,CAACC,iBAAZ,CAA8B,eAA9B,EAA+C;AAAA,SAAMF,GAAN;AAAA,CAA/C;AAGA,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport { StyleSheet, Text, View } from 'react-native'\n\n// Create the client as outlined in the setup guide\nconst client = new ApolloClient({\n  cache: new InMemoryCache()\n});\n\nconst App = () => (\n  <ApolloProvider client={client}>\n            <View >\n            <Text>hi</Text>\n        </View>\n  </ApolloProvider>\n);\n\nAppRegistry.registerComponent('MyApplication', () => App);\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}