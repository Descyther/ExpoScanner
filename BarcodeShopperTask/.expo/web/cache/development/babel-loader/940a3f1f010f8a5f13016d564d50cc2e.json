{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React Bar Code Reader\\\\BarcodeShopperProject\\\\components\\\\Client.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n      {\\n\\n\\n      } \\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from \"@apollo/client\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nvar inventoryItem;\nvar client = new ApolloClient({\n  cache: new InMemoryCache()\n});\n\nvar ExchangeRates = function ExchangeRates() {\n  var _useQuery = useQuery(gql(_templateObject())),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  console.log(data);\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return data.rates.map(function (_ref) {\n    var currency = _ref.currency,\n        rate = _ref.rate;\n    return React.createElement(Text, {\n      key: currency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, \" \", currency, \": \", rate);\n  });\n};\n\nvar Client = function Client() {\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"My first Apollo app \\uD83D\\uDE80\")), React.createElement(ExchangeRates, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Client;","map":{"version":3,"sources":["C:/Users/User/Desktop/React Bar Code Reader/BarcodeShopperProject/components/Client.js"],"names":["React","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","inventoryItem","client","cache","ExchangeRates","loading","error","data","console","log","rates","map","currency","rate","Client"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACC,SACCC,YADD,EAECC,aAFD,EAGEC,cAHF,EAICC,QAJD,EAKCC,GALD,QAMO,gBANP;;;;;;AAaD,IAAIC,aAAJ;AACA,IAAMC,MAAM,GAAG,IAAIN,YAAJ,CAAiB;AAI9BO,EAAAA,KAAK,EAAE,IAAIN,aAAJ;AAJuB,CAAjB,CAAf;;AAOA,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,kBAEOL,QAAQ,CACvCC,GADuC,oBAFf;AAAA,MAElBK,OAFkB,aAElBA,OAFkB;AAAA,MAETC,KAFS,aAETA,KAFS;AAAA,MAEFC,IAFE,aAEFA,IAFE;;AAU1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SAAOC,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAe;AAAA,QAAGC,QAAH,QAAGA,QAAH;AAAA,QAAaC,IAAb,QAAaA,IAAb;AAAA,WACpB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAED,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuBA,QAAvB,QAAmCC,IAAnC,CADoB;AAAA,GAAf,CAAP;AAID,CAlBD;;AAuBA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,SACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEZ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,CADF,EAIE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CATH;;AAUE,eAAeY,MAAf","sourcesContent":["import React from \"react\";\r\n import {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n   ApolloProvider,\r\n  useQuery,\r\n  gql\r\n } from \"@apollo/client\";\r\nimport {\r\n  Text,\r\n  Image,\r\n  View,\r\n  StyleSheet, ScrollView\r\n} from 'react-native';\r\nvar inventoryItem;\r\nconst client = new ApolloClient({\r\n  //instead of a simple concatenation this uses string interpolation.\r\n  //the uri gets a single inventory item from your store based on the variable inventoryItem\r\n//   uri: `https://7b1e138671fbae7fda319f305a96abd0:a7abb2368b62941c85c998491395222e@Fuse+Link.myshopify.com/admin/api/2020-01/inventory_items/${inventoryItem}.json`,\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nconst ExchangeRates = () => {\r\n  //this query looks for the feild of rates in the json object\r\n  const { loading, error, data } = useQuery(\r\n    gql`\r\n      {\r\n\r\n\r\n      } \r\n    `\r\n  );\r\n  console.log(data)\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  return data.rates.map(({ currency, rate }) => (\r\n    <Text key={currency}> {currency}: {rate}\r\n    </Text>\r\n  ));\r\n}\r\n\r\n\r\n\r\n\r\nconst Client = () => {\r\n    return (\r\n      <ApolloProvider client={client}>\r\n        <ScrollView>\r\n          <Text>My first Apollo app ðŸš€</Text>\r\n        </ScrollView>\r\n        <ExchangeRates />\r\n      </ApolloProvider>\r\n    );\r\n  }\r\n  export default Client;"]},"metadata":{},"sourceType":"module"}