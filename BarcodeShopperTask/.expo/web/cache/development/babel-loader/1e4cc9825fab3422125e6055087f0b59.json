{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React Bar Code Reader\\\\BarcodeShopperProject\\\\node_modules\\\\react-native-side-drawer\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PropTypes from \"prop-types\";\nvar SCREEN_WIDTH = Dimensions.get(\"window\").width;\nvar SCREEN_HEIGHT = Dimensions.get(\"window\").height;\nvar isIOS = Platform.OS === \"ios\";\nvar VERSION = parseInt(Platform.Version, 10);\n\nvar MenuDrawer = function (_React$Component) {\n  _inherits(MenuDrawer, _React$Component);\n\n  var _super = _createSuper(MenuDrawer);\n\n  function MenuDrawer(props) {\n    var _this;\n\n    _classCallCheck(this, MenuDrawer);\n\n    _this = _super.call(this, props);\n\n    _this.openDrawer = function () {\n      var _this$props = _this.props,\n          drawerPercentage = _this$props.drawerPercentage,\n          animationTime = _this$props.animationTime,\n          opacity = _this$props.opacity,\n          position = _this$props.position;\n      var DRAWER_WIDTH = SCREEN_WIDTH * (drawerPercentage / 100);\n      Animated.parallel([Animated.timing(_this.leftOffset, {\n        toValue: _this.isLeftPosition ? DRAWER_WIDTH : SCREEN_WIDTH,\n        duration: animationTime,\n        useNativeDriver: true\n      }), Animated.timing(_this.state.fadeAnim, {\n        toValue: opacity,\n        duration: animationTime,\n        useNativeDriver: true\n      })]).start();\n    };\n\n    _this.closeDrawer = function () {\n      var _this$props2 = _this.props,\n          drawerPercentage = _this$props2.drawerPercentage,\n          animationTime = _this$props2.animationTime,\n          position = _this$props2.position;\n      var DRAWER_WIDTH = SCREEN_WIDTH * (drawerPercentage / 100);\n      Animated.parallel([Animated.timing(_this.leftOffset, {\n        toValue: _this.isLeftPosition ? 0 : SCREEN_WIDTH + DRAWER_WIDTH,\n        duration: animationTime,\n        useNativeDriver: true\n      }), Animated.timing(_this.state.fadeAnim, {\n        toValue: 1,\n        duration: animationTime,\n        useNativeDriver: true\n      })]).start();\n    };\n\n    _this.drawerFallback = function () {\n      return React.createElement(TouchableOpacity, {\n        onPress: _this.closeDrawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, \"Close\"));\n    };\n\n    _this.renderPush = function () {\n      var _this$props3 = _this.props,\n          children = _this$props3.children,\n          drawerContent = _this$props3.drawerContent,\n          drawerPercentage = _this$props3.drawerPercentage;\n      var fadeAnim = _this.state.fadeAnim;\n      var animated = {\n        transform: [{\n          translateX: _this.leftOffset\n        }]\n      };\n      var DRAWER_WIDTH = SCREEN_WIDTH * (drawerPercentage / 100);\n\n      if (isIOS && VERSION >= 11) {\n        return React.createElement(Animated.View, {\n          style: [animated, styles.main],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }\n        }, React.createElement(SafeAreaView, {\n          style: {\n            flex: 1,\n            backgroundColor: \"#fff\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: [styles.drawer, {\n            width: DRAWER_WIDTH,\n            left: -DRAWER_WIDTH\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }\n        }, drawerContent ? drawerContent : _this.drawerFallback()), React.createElement(Animated.View, {\n          style: [styles.container, {\n            opacity: fadeAnim\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }\n        }, children)));\n      }\n\n      return React.createElement(Animated.View, {\n        style: [animated, styles.main, {\n          width: SCREEN_WIDTH + DRAWER_WIDTH\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.drawer, {\n          width: DRAWER_WIDTH,\n          left: -DRAWER_WIDTH\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }, drawerContent ? drawerContent : _this.drawerFallback()), React.createElement(Animated.View, {\n        style: [styles.container, {\n          opacity: fadeAnim\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }, children));\n    };\n\n    _this.renderOverlay = function () {\n      var _this$props4 = _this.props,\n          children = _this$props4.children,\n          drawerContent = _this$props4.drawerContent,\n          drawerPercentage = _this$props4.drawerPercentage;\n      var fadeAnim = _this.state.fadeAnim;\n      var animated = {\n        transform: [{\n          translateX: _this.leftOffset\n        }]\n      };\n      var DRAWER_WIDTH = SCREEN_WIDTH * (drawerPercentage / 100);\n\n      if (isIOS && VERSION >= 11) {\n        return React.createElement(SafeAreaView, {\n          style: [styles.main],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 9\n          }\n        }, React.createElement(Animated.View, {\n          style: [animated, styles.drawer, {\n            width: DRAWER_WIDTH,\n            left: -DRAWER_WIDTH\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }\n        }, drawerContent ? drawerContent : _this.drawerFallback()), React.createElement(Animated.View, {\n          style: [styles.container, {\n            opacity: fadeAnim\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 11\n          }\n        }, children));\n      }\n\n      return React.createElement(View, {\n        style: styles.main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.View, {\n        style: [animated, styles.drawer, {\n          width: DRAWER_WIDTH,\n          left: -DRAWER_WIDTH\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }\n      }, drawerContent ? drawerContent : _this.drawerFallback()), React.createElement(Animated.View, {\n        style: [styles.container, {\n          opacity: fadeAnim\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }\n      }, children));\n    };\n\n    _this.isLeftPosition = props.position === \"left\";\n\n    var _DRAWER_WIDTH = SCREEN_WIDTH * (props.drawerPercentage / 100);\n\n    _this.leftOffset = new Animated.Value(_this.isLeftPosition ? 0 : SCREEN_WIDTH + _DRAWER_WIDTH);\n    _this.state = {\n      expanded: false,\n      fadeAnim: new Animated.Value(1)\n    };\n    return _this;\n  }\n\n  _createClass(MenuDrawer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var open = this.props.open;\n      open ? this.openDrawer() : this.closeDrawer();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var overlay = this.props.overlay;\n      return overlay ? this.renderOverlay() : this.renderPush();\n    }\n  }]);\n\n  return MenuDrawer;\n}(React.Component);\n\nMenuDrawer.defaultProps = {\n  open: false,\n  drawerPercentage: 45,\n  animationTime: 200,\n  overlay: true,\n  opacity: 0.4,\n  position: \"left\"\n};\nMenuDrawer.propTypes = {\n  open: PropTypes.bool,\n  drawerPercentage: PropTypes.number,\n  animationTime: PropTypes.number,\n  overlay: PropTypes.bool,\n  opacity: PropTypes.number,\n  position: PropTypes.oneOf([\"left\", \"right\"])\n};\nvar styles = StyleSheet.create({\n  main: {\n    position: \"absolute\",\n    left: 0,\n    top: 0\n  },\n  container: {\n    position: \"absolute\",\n    left: 0,\n    width: SCREEN_WIDTH,\n    height: SCREEN_HEIGHT,\n    zIndex: 0\n  },\n  drawer: {\n    position: \"absolute\",\n    height: SCREEN_HEIGHT,\n    zIndex: 1\n  }\n});\nexport default MenuDrawer;","map":{"version":3,"sources":["C:/Users/User/Desktop/React Bar Code Reader/BarcodeShopperProject/node_modules/react-native-side-drawer/index.js"],"names":["React","PropTypes","SCREEN_WIDTH","Dimensions","get","width","SCREEN_HEIGHT","height","isIOS","Platform","OS","VERSION","parseInt","Version","MenuDrawer","props","openDrawer","drawerPercentage","animationTime","opacity","position","DRAWER_WIDTH","Animated","parallel","timing","leftOffset","toValue","isLeftPosition","duration","useNativeDriver","state","fadeAnim","start","closeDrawer","drawerFallback","renderPush","children","drawerContent","animated","transform","translateX","styles","main","flex","backgroundColor","drawer","left","container","renderOverlay","Value","expanded","open","overlay","Component","defaultProps","propTypes","bool","number","oneOf","StyleSheet","create","top","zIndex"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Animated,\n  Dimensions,\n  StyleSheet,\n  View,\n  Text,\n  SafeAreaView,\n  Platform,\n  TouchableOpacity,\n} from \"react-native\";\nimport PropTypes from \"prop-types\";\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\nconst isIOS = Platform.OS === \"ios\";\nconst VERSION = parseInt(Platform.Version, 10);\n\nclass MenuDrawer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.isLeftPosition = props.position === \"left\";\n    const DRAWER_WIDTH = SCREEN_WIDTH * (props.drawerPercentage / 100);\n\n    this.leftOffset = new Animated.Value(\n      this.isLeftPosition ? 0 : SCREEN_WIDTH + DRAWER_WIDTH\n    );\n    this.state = {\n      expanded: false,\n      fadeAnim: new Animated.Value(1),\n    };\n  }\n\n  openDrawer = () => {\n    const { drawerPercentage, animationTime, opacity, position } = this.props;\n    const DRAWER_WIDTH = SCREEN_WIDTH * (drawerPercentage / 100);\n\n    Animated.parallel([\n      Animated.timing(this.leftOffset, {\n        toValue: this.isLeftPosition ? DRAWER_WIDTH : SCREEN_WIDTH,\n        duration: animationTime,\n        useNativeDriver: true,\n      }),\n      Animated.timing(this.state.fadeAnim, {\n        toValue: opacity,\n        duration: animationTime,\n        useNativeDriver: true,\n      }),\n    ]).start();\n  };\n\n  closeDrawer = () => {\n    const { drawerPercentage, animationTime, position } = this.props;\n    const DRAWER_WIDTH = SCREEN_WIDTH * (drawerPercentage / 100);\n\n    Animated.parallel([\n      Animated.timing(this.leftOffset, {\n        toValue: this.isLeftPosition ? 0 : SCREEN_WIDTH + DRAWER_WIDTH,\n        duration: animationTime,\n        useNativeDriver: true,\n      }),\n      Animated.timing(this.state.fadeAnim, {\n        toValue: 1,\n        duration: animationTime,\n        useNativeDriver: true,\n      }),\n    ]).start();\n  };\n\n  drawerFallback = () => {\n    return (\n      <TouchableOpacity onPress={this.closeDrawer}>\n        <Text>Close</Text>\n      </TouchableOpacity>\n    );\n  };\n\n  componentDidUpdate() {\n    const { open } = this.props;\n\n    open ? this.openDrawer() : this.closeDrawer();\n  }\n\n  renderPush = () => {\n    const { children, drawerContent, drawerPercentage } = this.props;\n    const { fadeAnim } = this.state;\n    const animated = { transform: [{ translateX: this.leftOffset }] };\n    const DRAWER_WIDTH = SCREEN_WIDTH * (drawerPercentage / 100);\n\n    if (isIOS && VERSION >= 11) {\n      return (\n        <Animated.View style={[animated, styles.main]}>\n          <SafeAreaView style={{ flex: 1, backgroundColor: \"#fff\" }}>\n            <View\n              style={[\n                styles.drawer,\n                {\n                  width: DRAWER_WIDTH,\n                  left: -DRAWER_WIDTH,\n                },\n              ]}\n            >\n              {drawerContent ? drawerContent : this.drawerFallback()}\n            </View>\n            <Animated.View\n              style={[\n                styles.container,\n                {\n                  opacity: fadeAnim,\n                },\n              ]}\n            >\n              {children}\n            </Animated.View>\n          </SafeAreaView>\n        </Animated.View>\n      );\n    }\n\n    return (\n      <Animated.View\n        style={[animated, styles.main, { width: SCREEN_WIDTH + DRAWER_WIDTH }]}\n      >\n        <View\n          style={[\n            styles.drawer,\n            {\n              width: DRAWER_WIDTH,\n              left: -DRAWER_WIDTH,\n            },\n          ]}\n        >\n          {drawerContent ? drawerContent : this.drawerFallback()}\n        </View>\n        <Animated.View\n          style={[\n            styles.container,\n            {\n              opacity: fadeAnim,\n            },\n          ]}\n        >\n          {children}\n        </Animated.View>\n      </Animated.View>\n    );\n  };\n\n  renderOverlay = () => {\n    const { children, drawerContent, drawerPercentage } = this.props;\n    const { fadeAnim } = this.state;\n    const animated = { transform: [{ translateX: this.leftOffset }] };\n    const DRAWER_WIDTH = SCREEN_WIDTH * (drawerPercentage / 100);\n\n    if (isIOS && VERSION >= 11) {\n      return (\n        <SafeAreaView style={[styles.main]}>\n          <Animated.View\n            style={[\n              animated,\n              styles.drawer,\n              { width: DRAWER_WIDTH, left: -DRAWER_WIDTH },\n            ]}\n          >\n            {drawerContent ? drawerContent : this.drawerFallback()}\n          </Animated.View>\n          <Animated.View style={[styles.container, { opacity: fadeAnim }]}>\n            {children}\n          </Animated.View>\n        </SafeAreaView>\n      );\n    }\n\n    return (\n      <View style={styles.main}>\n        <Animated.View\n          style={[\n            animated,\n            styles.drawer,\n            {\n              width: DRAWER_WIDTH,\n              left: -DRAWER_WIDTH,\n            },\n          ]}\n        >\n          {drawerContent ? drawerContent : this.drawerFallback()}\n        </Animated.View>\n        <Animated.View\n          style={[\n            styles.container,\n            {\n              opacity: fadeAnim,\n            },\n          ]}\n        >\n          {children}\n        </Animated.View>\n      </View>\n    );\n  };\n\n  render() {\n    const { overlay } = this.props;\n\n    return overlay ? this.renderOverlay() : this.renderPush();\n  }\n}\n\nMenuDrawer.defaultProps = {\n  open: false,\n  drawerPercentage: 45,\n  animationTime: 200,\n  overlay: true,\n  opacity: 0.4,\n  position: \"left\",\n};\n\nMenuDrawer.propTypes = {\n  open: PropTypes.bool,\n  drawerPercentage: PropTypes.number,\n  animationTime: PropTypes.number,\n  overlay: PropTypes.bool,\n  opacity: PropTypes.number,\n  position: PropTypes.oneOf([\"left\", \"right\"]),\n};\n\nconst styles = StyleSheet.create({\n  main: {\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n  },\n  container: {\n    position: \"absolute\",\n    left: 0,\n    width: SCREEN_WIDTH,\n    height: SCREEN_HEIGHT,\n    zIndex: 0,\n  },\n  drawer: {\n    position: \"absolute\",\n    height: SCREEN_HEIGHT,\n    zIndex: 1,\n  },\n});\n\nexport default MenuDrawer;\n"]},"metadata":{},"sourceType":"module"}