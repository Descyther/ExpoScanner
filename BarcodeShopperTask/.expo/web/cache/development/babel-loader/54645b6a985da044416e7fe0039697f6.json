{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React Bar Code Reader\\\\BarcodeShopperProject\\\\components\\\\Client.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query getShop {\\n    shop {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from \"@apollo/client\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nvar inventoryItem;\nvar client = new ApolloClient({\n  async: true,\n  crossDomain: true,\n  fetchOptions: {\n    mode: \"no-cors\"\n  },\n  uri: \"https://fuse-dev.myshopify.com/api/2020-01/graphql.json\",\n  headers: {\n    \"Access-Control-Allow-Credentials\": true,\n    \"Access-Control-Allow-Origin\": \"http://swapi.dev/api/planets/1/\",\n    \"Content-Type\": \"application/graphql\",\n    \"X-Shopify-Storefront-Access-Token\": fab5f8cc3552d5f0590dc14f42aa5214,\n    \"X-Shopify-Access-Token:\": \"a7abb2368b62941c85c998491395222e\",\n    Host: \"bar.other\",\n    Accept: \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\",\n    \"Accept-Language\": \"en-us,en;q=0.5\",\n    \"Accept-Encoding\": \"gzip,deflate\",\n    \"Accept-Charset\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.7\",\n    Connection: \"keep-alive\",\n    Origin: \"http://192.168.1.224:19006/\",\n    \"Access-Control-Request-Method\": \"POST\",\n    \"Access-Control-Request-Headers\": \"X-PINGOTHER, Content-Type\"\n  },\n  cache: new InMemoryCache()\n});\n\nvar APIData = function APIData() {\n  var SHOP_DETAILS = gql(_templateObject());\n\n  var _useQuery = useQuery(SHOP_DETAILS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  console.log(data);\n  return data.shop.map(function (_ref) {\n    var id = _ref.id,\n        name = _ref.name;\n    return React.createElement(Text, {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }, name);\n  });\n};\n\nvar Client = function Client() {\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.scroll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Product Retreived \\uD83D\\uDE80\")), React.createElement(APIData, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  scroll: {}\n});\nexport default Client;","map":{"version":3,"sources":["C:/Users/User/Desktop/React Bar Code Reader/BarcodeShopperProject/components/Client.js"],"names":["React","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","inventoryItem","client","async","crossDomain","fetchOptions","mode","uri","headers","fab5f8cc3552d5f0590dc14f42aa5214","Host","Accept","Connection","Origin","cache","APIData","SHOP_DETAILS","loading","error","data","console","log","shop","map","id","name","Client","styles","scroll","StyleSheet","create"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,GALF,QAMO,gBANP;;;;;;AAQA,IAAIC,aAAJ;AACA,IAAMC,MAAM,GAAG,IAAIN,YAAJ,CAAiB;AAI9BO,EAAAA,KAAK,EAAE,IAJuB;AAK9BC,EAAAA,WAAW,EAAE,IALiB;AAM9BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE;AADM,GANgB;AAS9BC,EAAAA,GAAG,2DAT2B;AAY9BC,EAAAA,OAAO,EAAE;AACP,wCAAoC,IAD7B;AAEP,mCAA+B,iCAFxB;AAGP,oBAAgB,qBAHT;AAIP,yCAAqCC,gCAJ9B;AAKP,+BAA2B,kCALpB;AAMPC,IAAAA,IAAI,EAAE,WANC;AAOPC,IAAAA,MAAM,EAAE,iEAPD;AAQP,uBAAmB,gBARZ;AASP,uBAAmB,cATZ;AAUP,sBAAkB,gCAVX;AAWPC,IAAAA,UAAU,EAAE,YAXL;AAYPC,IAAAA,MAAM,EAAE,6BAZD;AAaP,qCAAiC,MAb1B;AAcP,sCAAkC;AAd3B,GAZqB;AA4B9BC,EAAAA,KAAK,EAAE,IAAIjB,aAAJ;AA5BuB,CAAjB,CAAf;;AA+BA,IAAMkB,OAAO,GAAG,SAAVA,OAAU,GAAM;AAEpB,MAAMC,YAAY,GAAGhB,GAAH,mBAAlB;;AAFoB,kBAUaD,QAAQ,CAACiB,YAAD,CAVrB;AAAA,MAUZC,OAVY,aAUZA,OAVY;AAAA,MAUHC,KAVG,aAUHA,KAVG;AAAA,MAUIC,IAVJ,aAUIA,IAVJ;;AAYpB,MAAIF,OAAJ,EAAa,OAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACXE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAOA,IAAI,CAACG,IAAL,CAAUC,GAAV,CAAc;AAAA,QAAGC,EAAH,QAAGA,EAAH;AAAA,QAAOC,IAAP,QAAOA,IAAP;AAAA,WACnB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAED,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBC,IAAhB,CADmB;AAAA,GAAd,CAAP;AAGD,CAlBD;;AAoBA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,SACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAExB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEyB,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CADF,EAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF;AAUD,CAXD;;AAaA,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,MAAM,EAAE;AADuB,CAAlB,CAAf;AAIA,eAAeF,MAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  useQuery,\r\n  gql,\r\n} from \"@apollo/client\";\r\nimport { Text, Image, View, StyleSheet, ScrollView } from \"react-native\";\r\nvar inventoryItem;\r\nconst client = new ApolloClient({\r\n  //instead of a simple concatenation this uses string interpolation.\r\n  //the uri gets a single inventory item from your store based on the variable inventoryItem\r\n  //    uri: `https://7b1e138671fbae7fda319f305a96abd0:a7abb2368b62941c85c998491395222e@Fuse+Link.myshopify.com/admin/api/2020-01/inventory_items/${inventoryItem}.json`,\r\n  async: true,\r\n  crossDomain: true,\r\n  fetchOptions: {\r\n    mode: \"no-cors\",\r\n  },\r\n  uri: `https://fuse-dev.myshopify.com/api/2020-01/graphql.json`,\r\n  //uri: \"http://swapi.dev/api/planets/1/\",\r\n\r\n  headers: {\r\n    \"Access-Control-Allow-Credentials\": true,\r\n    \"Access-Control-Allow-Origin\": \"http://swapi.dev/api/planets/1/\",\r\n    \"Content-Type\": \"application/graphql\",\r\n    \"X-Shopify-Storefront-Access-Token\": fab5f8cc3552d5f0590dc14f42aa5214,\r\n    \"X-Shopify-Access-Token:\": \"a7abb2368b62941c85c998491395222e\",\r\n    Host: \"bar.other\",\r\n    Accept: \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\",\r\n    \"Accept-Language\": \"en-us,en;q=0.5\",\r\n    \"Accept-Encoding\": \"gzip,deflate\",\r\n    \"Accept-Charset\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.7\",\r\n    Connection: \"keep-alive\",\r\n    Origin: \"http://192.168.1.224:19006/\",\r\n    \"Access-Control-Request-Method\": \"POST\",\r\n    \"Access-Control-Request-Headers\": \"X-PINGOTHER, Content-Type\",\r\n  },\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nconst APIData = () => {\r\n  //this query looks for the feild of rates in the json object\r\n  const SHOP_DETAILS = gql`\r\n  query getShop {\r\n    shop {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n  const { loading, error, data } = useQuery(SHOP_DETAILS);\r\n  \r\n  if (loading) return <Text>Loading...</Text>;\r\n  if (error) return <Text>Error :(</Text>;\r\n  console.log(data);\r\n  return data.shop.map(({ id, name }) => (\r\n    <Text key={id}>{name}</Text>\r\n  ));\r\n};\r\n\r\nconst Client = () => {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <View style={styles.scroll}>\r\n        <ScrollView>\r\n          <Text>Product Retreived ðŸš€</Text>\r\n        </ScrollView>\r\n        <APIData />\r\n      </View>\r\n    </ApolloProvider>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  scroll: {},\r\n});\r\n\r\nexport default Client;\r\n"]},"metadata":{},"sourceType":"module"}