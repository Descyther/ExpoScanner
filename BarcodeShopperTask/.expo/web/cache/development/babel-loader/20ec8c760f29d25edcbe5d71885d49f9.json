{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React Bar Code Reader\\\\BarcodeShopperProject\\\\hi.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n      {\\n        rates(currency: \\\"USD\\\") {\\n          currency\\n          rate\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { ApolloClient, InMemoryCache, useQuery, gql } from \"@apollo/client\";\nvar inventoryItem;\nvar client = new ApolloClient({\n  uri: \"https://7b1e138671fbae7fda319f305a96abd0:a7abb2368b62941c85c998491395222e@Fuse+Link.myshopify.com/admin/api/2020-01/inventory_items/\" + inventoryItem + \".json\",\n  cache: new InMemoryCache()\n});\n\nvar ExchangeRates = function ExchangeRates() {\n  var _useQuery = useQuery(gql(_templateObject())),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  console.log(data);\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return data.rates.map(function (_ref) {\n    var currency = _ref.currency,\n        rate = _ref.rate;\n    return React.createElement(Text, {\n      key: currency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }, \" \", currency, \": \", rate);\n  });\n};\n\nexport default ExchangeRates;","map":{"version":3,"sources":["C:/Users/User/Desktop/React Bar Code Reader/BarcodeShopperProject/hi.js"],"names":["React","ApolloClient","InMemoryCache","useQuery","gql","inventoryItem","client","uri","cache","ExchangeRates","loading","error","data","console","log","rates","map","currency","rate"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,QAHF,EAIEC,GAJF,QAKO,gBALP;AAOA,IAAIC,aAAJ;AACA,IAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAG9BM,EAAAA,GAAG,2IAAyIF,aAAzI,UAH2B;AAI9BG,EAAAA,KAAK,EAAE,IAAIN,aAAJ;AAJuB,CAAjB,CAAf;;AAOA,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,kBAEON,QAAQ,CACvCC,GADuC,oBAFf;AAAA,MAElBM,OAFkB,aAElBA,OAFkB;AAAA,MAETC,KAFS,aAETA,KAFS;AAAA,MAEFC,IAFE,aAEFA,IAFE;;AAY1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SAAOC,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAe;AAAA,QAAGC,QAAH,QAAGA,QAAH;AAAA,QAAaC,IAAb,QAAaA,IAAb;AAAA,WACpB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAED,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuBA,QAAvB,QAAmCC,IAAnC,CADoB;AAAA,GAAf,CAAP;AAID,CApBD;;AAsBA,eAAeT,aAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  useQuery,\r\n  gql\r\n} from \"@apollo/client\";\r\n\r\nvar inventoryItem;\r\nconst client = new ApolloClient({\r\n  //instead of a simple concatenation this uses string interpolation.\r\n  //the uri gets a single inventory item from your store based on the variable inventoryItem\r\n  uri: `https://7b1e138671fbae7fda319f305a96abd0:a7abb2368b62941c85c998491395222e@Fuse+Link.myshopify.com/admin/api/2020-01/inventory_items/${inventoryItem}.json`,\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nconst ExchangeRates = () => {\r\n  //this query looks for the feild of rates in the json object\r\n  const { loading, error, data } = useQuery(\r\n    gql`\r\n      {\r\n        rates(currency: \"USD\") {\r\n          currency\r\n          rate\r\n        }\r\n      }\r\n    `\r\n  );\r\n  console.log(data)\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  return data.rates.map(({ currency, rate }) => (\r\n    <Text key={currency}> {currency}: {rate}\r\n    </Text>\r\n  ));\r\n}\r\n\r\nexport default ExchangeRates;"]},"metadata":{},"sourceType":"module"}